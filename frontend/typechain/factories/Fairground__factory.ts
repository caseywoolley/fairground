/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Fairground, FairgroundInterface } from "../Fairground";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "ReserveIncreased",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "activeBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "activeReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionDuration",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "auctionEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "currentBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "increaseReserve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isAuctionExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isLeaseExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leaseDuration",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "leaseEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "priceToRentRatio",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "propertyDetail",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leaseEnd",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "recordedOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "topBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Fairground.PropertyDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pageNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "propertyList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leaseEnd",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "recordedOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "topBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Fairground.PropertyDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "duration",
        type: "uint48",
      },
    ],
    name: "setAuctionDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "duration",
        type: "uint48",
      },
    ],
    name: "setLeaseDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "ratio",
        type: "uint8",
      },
    ],
    name: "setPriceToRentRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "targetBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "topBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "topBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updateClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526014600160146101000a81548160ff021916908360ff160217905550610258600160156101000a81548165ffffffffffff021916908365ffffffffffff16021790555060b4600260006101000a81548165ffffffffffff021916908365ffffffffffff160217905550600060035534801561007e57600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c20806100cf6000396000f3fe6080604052600436106101bb5760003560e01c80634f6be30f116100ec5780637af51f491161008a578063daff743511610064578063daff7435146106ee578063e6fa4cf814610719578063f5752f5914610756578063f851a44014610793576101bc565b80637af51f49146106585780637dc2b17c146106955780639979ef45146106d2576101bc565b80635e9abe40116100c65780635e9abe401461058c5780636352211e146105b55780636a627842146105f2578063728bd24a1461061b576101bc565b80634f6be30f146104f95780635caef00a146105245780635e1ff1e51461054f576101bc565b806339c7639c116101595780633d61a169116101335780633d61a16914610419578063406c3897146104565780634bece48e1461047f5780634bf9a022146104bc576101bc565b806339c7639c146103955780633a6a4d2e146103d25780633c7cfe34146103dc576101bc565b806318160ddd1161019557806318160ddd146102e85780631eed4c7d146103135780631fbf7c3e1461033c5780633201ad9414610358576101bc565b80630cbf54c81461025757806312b3368d146102825780631389b117146102ab576101bc565b5b3480156101c857600080fd5b506102076040518060400160405280601f81526020017f4661697267726f756e642066616c6c6261636b2063616c6c65642077697468008152506107be565b6102556000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610857565b005b34801561026357600080fd5b5061026c6108f0565b6040516102799190611ef0565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a49190611f46565b610908565b005b3480156102b757600080fd5b506102d260048036038101906102cd9190611f46565b610991565b6040516102df9190611f8e565b60405180910390f35b3480156102f457600080fd5b506102fd6109a5565b60405161030a9190611fb8565b60405180910390f35b34801561031f57600080fd5b5061033a60048036038101906103359190611fff565b6109b6565b005b61035660048036038101906103519190611f46565b610a6e565b005b34801561036457600080fd5b5061037f600480360381019061037a9190611f46565b610bc3565b60405161038c9190611f8e565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611f46565b610be2565b6040516103c99190611f8e565b60405180910390f35b6103da610c22565b005b3480156103e857600080fd5b5061040360048036038101906103fe9190611f46565b610d6e565b6040516104109190611fb8565b60405180910390f35b34801561042557600080fd5b50610440600480360381019061043b9190611f46565b610d91565b60405161044d9190611fb8565b60405180910390f35b34801561046257600080fd5b5061047d60048036038101906104789190611fff565b610db8565b005b34801561048b57600080fd5b506104a660048036038101906104a1919061202c565b610e70565b6040516104b3919061220e565b60405180910390f35b3480156104c857600080fd5b506104e360048036038101906104de9190611f46565b611008565b6040516104f091906122d2565b60405180910390f35b34801561050557600080fd5b5061050e6110ee565b60405161051b9190611ef0565b60405180910390f35b34801561053057600080fd5b50610539611106565b6040516105469190611fb8565b60405180910390f35b34801561055b57600080fd5b5061057660048036038101906105719190611f46565b61111b565b60405161058391906122fd565b60405180910390f35b34801561059857600080fd5b506105b360048036038101906105ae9190612351565b61116d565b005b3480156105c157600080fd5b506105dc60048036038101906105d79190611f46565b61121b565b6040516105e991906122fd565b60405180910390f35b3480156105fe57600080fd5b50610619600480360381019061061491906123aa565b61130b565b005b34801561062757600080fd5b50610642600480360381019061063d9190611f46565b611373565b60405161064f9190611fb8565b60405180910390f35b34801561066457600080fd5b5061067f600480360381019061067a919061202c565b611390565b60405161068c9190611fb8565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b79190611f46565b61144f565b6040516106c99190611fb8565b60405180910390f35b6106ec60048036038101906106e79190611f46565b61146c565b005b3480156106fa57600080fd5b506107036115a8565b60405161071091906123e6565b60405180910390f35b34801561072557600080fd5b50610740600480360381019061073b9190611f46565b6115bb565b60405161074d9190611fb8565b60405180910390f35b34801561076257600080fd5b5061077d60048036038101906107789190611f46565b61167f565b60405161078a9190611fb8565b60405180910390f35b34801561079f57600080fd5b506107a861170c565b6040516107b591906122fd565b60405180910390f35b610854816040516024016107d2919061249a565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611732565b50565b6108ed8160405160240161086b9190612511565b6040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611732565b50565b600260009054906101000a900465ffffffffffff1681565b60006109138261121b565b905060006009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461098c5761098b83838361175b565b5b505050565b600061099c8261144f565b42119050919050565b60006109b160006117de565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d9061257f565b60405180910390fd5b80600160156101000a81548165ffffffffffff021916908365ffffffffffff16021790555050565b80610a7881610be2565b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae906125eb565b60405180910390fd5b60003411610afa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af190612657565b60405180910390fd5b610b0382610d6e565b610b0c836117ec565b1015610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b44906126c3565b60405180910390fd5b610b5682610908565b610b6882610b63846117ec565b611811565b3373ffffffffffffffffffffffffffffffffffffffff16827f1e5acefa95fe0a035d068a87d1bb9d05c10f0c67f9f4b163f670758631a1fd6a610baa856117ec565b604051610bb79190611fb8565b60405180910390a35050565b6000600760008381526020019081526020016000205442119050919050565b6000610bed8261121b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16149050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca99061257f565b60405180910390fd5b6000610cbc611106565b11610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf39061272f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc610d40611106565b9081150290604051600060405180830381858888f19350505050158015610d6b573d6000803e3d6000fd5b50565b6000610d8a610d7c83610d91565b610d85846115bb565b61187b565b9050919050565b6000610d9c82610991565b610dae57610da98261167f565b610db1565b60005b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3f9061257f565b60405180910390fd5b80600260006101000a81548165ffffffffffff021916908365ffffffffffff16021790555050565b60606000610e7e60006117de565b11610ebe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb59061279b565b60405180910390fd5b600082600185610ece91906127ea565b610ed8919061281e565b905080610ee560006117de565b11610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c906128c4565b60405180910390fd5b600081610f3260006117de565b610f3c91906127ea565b9050600084821015610f4e5781610f50565b845b905060008167ffffffffffffffff811115610f6e57610f6d6128e4565b5b604051908082528060200260200182016040528015610fa757816020015b610f94611e48565b815260200190600190039081610f8c5790505b50905060005b82811015610ffa57610fc98185610fc491906127ea565b611008565b828281518110610fdc57610fdb612913565b5b60200260200101819052508080610ff290612942565b915050610fad565b508094505050505092915050565b611010611e48565b60405180610100016040528083815260200161102b84610d6e565b81526020016110398461144f565b815260200161104784611373565b81526020016110558461121b565b73ffffffffffffffffffffffffffffffffffffffff1681526020016009600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016110c88461111b565b73ffffffffffffffffffffffffffffffffffffffff168152602001428152509050919050565b600160159054906101000a900465ffffffffffff1681565b60006003544761111691906127ea565b905090565b600061112682610991565b611163576005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611166565b60005b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f49061257f565b60405180910390fd5b80600160146101000a81548160ff021916908360ff16021790555050565b600061122682610991565b80156112925750600073ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6112cf576009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611304565b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050919050565b6113156000611895565b806009600061132460006117de565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060076000838152602001908152602001600020549050919050565b60008061139c84610be2565b6113a75760006113b1565b6113b0846115bb565b5b90508083116113c4576000915050611449565b6000600160149054906101000a900460ff1660ff1682856113e591906127ea565b6113ef91906129ba565b90506113fa85610be2565b61140f57818461140a91906127ea565b611444565b600160149054906101000a900460ff1660ff1681838661142f91906127ea565b61143991906127ea565b61144391906129ba565b5b925050505b92915050565b600060066000838152602001908152602001600020549050919050565b8061147681610be2565b156114b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ad90612a37565b60405180910390fd5b600034116114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f090612657565b60405180910390fd5b61150282610d6e565b3411611543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153a90612aa3565b60405180910390fd5b61154c82610908565b611555826118ab565b3373ffffffffffffffffffffffffffffffffffffffff16827f0e54eff26401bf69b81b26f60bd85ef47f5d85275c1d268d84f68d6897431c473460405161159c9190611fb8565b60405180910390a35050565b600160149054906101000a900460ff1681565b6000806009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116118461121b565b73ffffffffffffffffffffffffffffffffffffffff1614159050600081611639576000611643565b6116428461167f565b5b905061164e84610bc3565b6116745761166f81600860008781526020019081526020016000205461187b565b611676565b805b92505050919050565b6000600460006005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006117668461167f565b90506117738484846118c9565b826009600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117cf8482611811565b6117d884611b08565b50505050565b600081600001549050919050565b60006117f7826115bb565b61180034611b4a565b61180a9190612ac3565b9050919050565b8060086000848152602001908152602001600020819055506005600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561186882610bc3565b156118775761187682611b08565b5b5050565b60008183101561188b578161188d565b825b905092915050565b6001816000016000828254019250508190555050565b6118b481611bb7565b6118bd81611bfe565b6118c681611cc1565b50565b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461196a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196190612b65565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054905060008114156119ce5750611b03565b80600360008282546119e091906127ea565b92505081905550600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600090556005600085815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611ab557611ab08583611d03565b611ab7565b815b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611aff573d6000803e3d6000fd5b5050505b505050565b600160159054906101000a900465ffffffffffff1665ffffffffffff1642611b309190612ac3565b600760008381526020019081526020016000208190555050565b600080600160149054906101000a900460ff166064611b699190612b85565b6064611b759190612bb6565b60ff169050600160149054906101000a900460ff1660ff1660648285611b9b91906129ba565b611ba5919061281e565b611baf919061281e565b915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611bfa8282836118c9565b5050565b3460036000828254611c109190612ac3565b9250508190555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900465ffffffffffff1665ffffffffffff1642611ce99190612ac3565b600660008381526020019081526020016000208190555050565b600080600160149054906101000a900460ff1660ff1683611d2491906129ba565b9050611d2f84611d4e565b8184611d3b91906127ea565b611d459190612ac3565b91505092915050565b600080611d5a83611de9565b90506000811480611d7e575060006008600085815260200190815260200160002054145b611dde57611dd981600160159054906101000a900465ffffffffffff1665ffffffffffff16600160149054906101000a900460ff1660ff166008600088815260200190815260200160002054611dd491906129ba565b611e26565b611de1565b60005b915050919050565b6000611df482610bc3565b611e1c57426007600084815260200190815260200160002054611e1791906127ea565b611e1f565b60005b9050919050565b6000828285611e35919061281e565b611e3f91906129ba565b90509392505050565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600065ffffffffffff82169050919050565b611eea81611ecf565b82525050565b6000602082019050611f056000830184611ee1565b92915050565b600080fd5b6000819050919050565b611f2381611f10565b8114611f2e57600080fd5b50565b600081359050611f4081611f1a565b92915050565b600060208284031215611f5c57611f5b611f0b565b5b6000611f6a84828501611f31565b91505092915050565b60008115159050919050565b611f8881611f73565b82525050565b6000602082019050611fa36000830184611f7f565b92915050565b611fb281611f10565b82525050565b6000602082019050611fcd6000830184611fa9565b92915050565b611fdc81611ecf565b8114611fe757600080fd5b50565b600081359050611ff981611fd3565b92915050565b60006020828403121561201557612014611f0b565b5b600061202384828501611fea565b91505092915050565b6000806040838503121561204357612042611f0b565b5b600061205185828601611f31565b925050602061206285828601611f31565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6120a181611f10565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120d2826120a7565b9050919050565b6120e2816120c7565b82525050565b610100820160008201516120ff6000850182612098565b5060208201516121126020850182612098565b5060408201516121256040850182612098565b5060608201516121386060850182612098565b50608082015161214b60808501826120d9565b5060a082015161215e60a08501826120d9565b5060c082015161217160c08501826120d9565b5060e082015161218460e0850182612098565b50505050565b600061219683836120e8565b6101008301905092915050565b6000602082019050919050565b60006121bb8261206c565b6121c58185612077565b93506121d083612088565b8060005b838110156122015781516121e8888261218a565b97506121f3836121a3565b9250506001810190506121d4565b5085935050505092915050565b6000602082019050818103600083015261222881846121b0565b905092915050565b610100820160008201516122476000850182612098565b50602082015161225a6020850182612098565b50604082015161226d6040850182612098565b5060608201516122806060850182612098565b50608082015161229360808501826120d9565b5060a08201516122a660a08501826120d9565b5060c08201516122b960c08501826120d9565b5060e08201516122cc60e0850182612098565b50505050565b6000610100820190506122e86000830184612230565b92915050565b6122f7816120c7565b82525050565b600060208201905061231260008301846122ee565b92915050565b600060ff82169050919050565b61232e81612318565b811461233957600080fd5b50565b60008135905061234b81612325565b92915050565b60006020828403121561236757612366611f0b565b5b60006123758482850161233c565b91505092915050565b612387816120c7565b811461239257600080fd5b50565b6000813590506123a48161237e565b92915050565b6000602082840312156123c0576123bf611f0b565b5b60006123ce84828501612395565b91505092915050565b6123e081612318565b82525050565b60006020820190506123fb60008301846123d7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561243b578082015181840152602081019050612420565b8381111561244a576000848401525b50505050565b6000601f19601f8301169050919050565b600061246c82612401565b612476818561240c565b935061248681856020860161241d565b61248f81612450565b840191505092915050565b600060208201905081810360008301526124b48184612461565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006124e3826124bc565b6124ed81856124c7565b93506124fd81856020860161241d565b61250681612450565b840191505092915050565b6000602082019050818103600083015261252b81846124d8565b905092915050565b7f4d757374206265207468652061646d696e000000000000000000000000000000600082015250565b600061256960118361240c565b915061257482612533565b602082019050919050565b600060208201905081810360008301526125988161255c565b9050919050565b7f4d75737420626520746865206f776e6572000000000000000000000000000000600082015250565b60006125d560118361240c565b91506125e08261259f565b602082019050919050565b60006020820190508181036000830152612604816125c8565b9050919050565b7f4d7573742062652067726561746572207468616e203000000000000000000000600082015250565b600061264160168361240c565b915061264c8261260b565b602082019050919050565b6000602082019050818103600083015261267081612634565b9050919050565b7f5265736572766520746f6f206c6f770000000000000000000000000000000000600082015250565b60006126ad600f8361240c565b91506126b882612677565b602082019050919050565b600060208201905081810360008301526126dc816126a0565b9050919050565b7f4e6f20636f6d6d756e6974792066756e647320746f2064697374726962757465600082015250565b600061271960208361240c565b9150612724826126e3565b602082019050919050565b600060208201905081810360008301526127488161270c565b9050919050565b7f4e6f2070726f7065727469657320666f756e6400000000000000000000000000600082015250565b600061278560138361240c565b91506127908261274f565b602082019050919050565b600060208201905081810360008301526127b481612778565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127f582611f10565b915061280083611f10565b925082821015612813576128126127bb565b5b828203905092915050565b600061282982611f10565b915061283483611f10565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561286d5761286c6127bb565b5b828202905092915050565b7f4f7574206f662072616e67650000000000000000000000000000000000000000600082015250565b60006128ae600c8361240c565b91506128b982612878565b602082019050919050565b600060208201905081810360008301526128dd816128a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061294d82611f10565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156129805761297f6127bb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006129c582611f10565b91506129d083611f10565b9250826129e0576129df61298b565b5b828204905092915050565b7f4d757374206e6f7420626520746865206f776e65720000000000000000000000600082015250565b6000612a2160158361240c565b9150612a2c826129eb565b602082019050919050565b60006020820190508181036000830152612a5081612a14565b9050919050565b7f42696420746f6f206c6f77000000000000000000000000000000000000000000600082015250565b6000612a8d600b8361240c565b9150612a9882612a57565b602082019050919050565b60006020820190508181036000830152612abc81612a80565b9050919050565b6000612ace82611f10565b9150612ad983611f10565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b0e57612b0d6127bb565b5b828201905092915050565b7f4d7573742077697468647261772066726f6d20746f7020626964646572000000600082015250565b6000612b4f601d8361240c565b9150612b5a82612b19565b602082019050919050565b60006020820190508181036000830152612b7e81612b42565b9050919050565b6000612b9082612318565b9150612b9b83612318565b925082612bab57612baa61298b565b5b828204905092915050565b6000612bc182612318565b9150612bcc83612318565b925082821015612bdf57612bde6127bb565b5b82820390509291505056fea2646970667358221220d2ca8baa484697971d4cc3429ad81efe1d7a695166995b362816648a38139e7064736f6c63430008090033";

type FairgroundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairgroundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fairground__factory extends ContractFactory {
  constructor(...args: FairgroundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Fairground> {
    return super.deploy(overrides || {}) as Promise<Fairground>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Fairground {
    return super.attach(address) as Fairground;
  }
  override connect(signer: Signer): Fairground__factory {
    return super.connect(signer) as Fairground__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairgroundInterface {
    return new utils.Interface(_abi) as FairgroundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fairground {
    return new Contract(address, _abi, signerOrProvider) as Fairground;
  }
}
