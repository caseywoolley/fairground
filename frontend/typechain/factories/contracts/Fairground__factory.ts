/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Fairground,
  FairgroundInterface,
} from "../../contracts/Fairground";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "ReserveIncreased",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "LeaseDuration",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "activeBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "activeReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionDuration",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "auctionEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "currentBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "increaseReserve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isAuctionExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isLeaseExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "leaseEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "priceToRentRatio",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "propertyDetail",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leaseEnd",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "recordedOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "topBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Fairground.PropertyDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pageNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "propertyList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leaseEnd",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "recordedOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "topBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Fairground.PropertyDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "duration",
        type: "uint48",
      },
    ],
    name: "setAuctionDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "duration",
        type: "uint48",
      },
    ],
    name: "setLeaseDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "ratio",
        type: "uint8",
      },
    ],
    name: "setPriceToRentRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "targetBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "topBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "topBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updateClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526014600160146101000a81548160ff021916908360ff160217905550610258600160156101000a81548165ffffffffffff021916908365ffffffffffff16021790555060b4600260006101000a81548165ffffffffffff021916908365ffffffffffff160217905550600060035534801561007e57600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612b91806100cf6000396000f3fe6080604052600436106101bb5760003560e01c80634bf9a022116100ec5780637af51f491161008a578063daff743511610064578063daff7435146106ee578063e6fa4cf814610719578063f5752f5914610756578063f851a44014610793576101bc565b80637af51f49146106585780637dc2b17c146106955780639979ef45146106d2576101bc565b80635e9abe40116100c65780635e9abe401461058c5780636352211e146105b55780636a627842146105f2578063728bd24a1461061b576101bc565b80634bf9a022146104e75780635caef00a146105245780635e1ff1e51461054f576101bc565b806339c7639c116101595780633d61a169116101335780633d61a169146104195780633e7234a614610456578063406c3897146104815780634bece48e146104aa576101bc565b806339c7639c146103955780633a6a4d2e146103d25780633c7cfe34146103dc576101bc565b806318160ddd1161019557806318160ddd146102e85780631eed4c7d146103135780631fbf7c3e1461033c5780633201ad9414610358576101bc565b80630cbf54c81461025757806312b3368d146102825780631389b117146102ab576101bc565b5b3480156101c857600080fd5b506102076040518060400160405280601f81526020017f4661697267726f756e642066616c6c6261636b2063616c6c65642077697468008152506107be565b6102556000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610857565b005b34801561026357600080fd5b5061026c6108f0565b6040516102799190611ecd565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a49190611f23565b610908565b005b3480156102b757600080fd5b506102d260048036038101906102cd9190611f23565b610991565b6040516102df9190611f6b565b60405180910390f35b3480156102f457600080fd5b506102fd6109a5565b60405161030a9190611f95565b60405180910390f35b34801561031f57600080fd5b5061033a60048036038101906103359190611fdc565b6109b6565b005b61035660048036038101906103519190611f23565b610a6e565b005b34801561036457600080fd5b5061037f600480360381019061037a9190611f23565b610bc3565b60405161038c9190611f6b565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611f23565b610be2565b6040516103c99190611f6b565b60405180910390f35b6103da610c22565b005b3480156103e857600080fd5b5061040360048036038101906103fe9190611f23565b610d24565b6040516104109190611f95565b60405180910390f35b34801561042557600080fd5b50610440600480360381019061043b9190611f23565b610d47565b60405161044d9190611f95565b60405180910390f35b34801561046257600080fd5b5061046b610d6e565b6040516104789190611ecd565b60405180910390f35b34801561048d57600080fd5b506104a860048036038101906104a39190611fdc565b610d86565b005b3480156104b657600080fd5b506104d160048036038101906104cc9190612009565b610e3e565b6040516104de91906121eb565b60405180910390f35b3480156104f357600080fd5b5061050e60048036038101906105099190611f23565b610ffd565b60405161051b91906122af565b60405180910390f35b34801561053057600080fd5b506105396110e3565b6040516105469190611f95565b60405180910390f35b34801561055b57600080fd5b5061057660048036038101906105719190611f23565b6110f8565b60405161058391906122da565b60405180910390f35b34801561059857600080fd5b506105b360048036038101906105ae919061232e565b61114a565b005b3480156105c157600080fd5b506105dc60048036038101906105d79190611f23565b6111f8565b6040516105e991906122da565b60405180910390f35b3480156105fe57600080fd5b5061061960048036038101906106149190612387565b6112e8565b005b34801561062757600080fd5b50610642600480360381019061063d9190611f23565b611350565b60405161064f9190611f95565b60405180910390f35b34801561066457600080fd5b5061067f600480360381019061067a9190612009565b61136d565b60405161068c9190611f95565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b79190611f23565b61142c565b6040516106c99190611f95565b60405180910390f35b6106ec60048036038101906106e79190611f23565b611449565b005b3480156106fa57600080fd5b50610703611585565b60405161071091906123c3565b60405180910390f35b34801561072557600080fd5b50610740600480360381019061073b9190611f23565b611598565b60405161074d9190611f95565b60405180910390f35b34801561076257600080fd5b5061077d60048036038101906107789190611f23565b61165c565b60405161078a9190611f95565b60405180910390f35b34801561079f57600080fd5b506107a86116e9565b6040516107b591906122da565b60405180910390f35b610854816040516024016107d29190612477565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061170f565b50565b6108ed8160405160240161086b91906124ee565b6040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061170f565b50565b600260009054906101000a900465ffffffffffff1681565b6000610913826111f8565b905060006009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461098c5761098b838383611738565b5b505050565b600061099c8261142c565b42119050919050565b60006109b160006117bb565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d9061255c565b60405180910390fd5b80600160156101000a81548165ffffffffffff021916908365ffffffffffff16021790555050565b80610a7881610be2565b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae906125c8565b60405180910390fd5b60003411610afa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af190612634565b60405180910390fd5b610b0382610d24565b610b0c836117c9565b1015610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b44906126a0565b60405180910390fd5b610b5682610908565b610b6882610b63846117c9565b6117ee565b3373ffffffffffffffffffffffffffffffffffffffff16827f1e5acefa95fe0a035d068a87d1bb9d05c10f0c67f9f4b163f670758631a1fd6a610baa856117c9565b604051610bb79190611f95565b60405180910390a35050565b6000600760008381526020019081526020016000205442119050919050565b6000610bed826111f8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16149050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca99061255c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc610cf66110e3565b9081150290604051600060405180830381858888f19350505050158015610d21573d6000803e3d6000fd5b50565b6000610d40610d3283610d47565b610d3b84611598565b611858565b9050919050565b6000610d5282610991565b610d6457610d5f8261165c565b610d67565b60005b9050919050565b600160159054906101000a900465ffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0d9061255c565b60405180910390fd5b80600160156101000a81548165ffffffffffff021916908365ffffffffffff16021790555050565b60606000610e4c60006117bb565b11610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e839061270c565b60405180910390fd5b600082600185610e9c919061275b565b610ea6919061278f565b90506001610eb460006117bb565b610ebe919061275b565b811115610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef790612835565b60405180910390fd5b6000610f0c60006117bb565b8483610f189190612855565b1115610f385781610f2960006117bb565b610f33919061275b565b610f3a565b835b905060008167ffffffffffffffff811115610f5857610f576128ab565b5b604051908082528060200260200182016040528015610f9157816020015b610f7e611e25565b815260200190600190039081610f765790505b50905060005b82811015610ff057610fbf60018286610fb09190612855565b610fba9190612855565b610ffd565b828281518110610fd257610fd16128da565b5b60200260200101819052508080610fe890612909565b915050610f97565b5080935050505092915050565b611005611e25565b60405180610100016040528083815260200161102084610d24565b815260200161102e8461142c565b815260200161103c84611350565b815260200161104a846111f8565b73ffffffffffffffffffffffffffffffffffffffff1681526020016009600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016110bd846110f8565b73ffffffffffffffffffffffffffffffffffffffff168152602001428152509050919050565b6000600354476110f3919061275b565b905090565b600061110382610991565b611140576005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611143565b60005b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d19061255c565b60405180910390fd5b80600160146101000a81548160ff021916908360ff16021790555050565b600061120382610991565b801561126f5750600073ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6112ac576009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166112e1565b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050919050565b6112f26000611872565b806009600061130160006117bb565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060076000838152602001908152602001600020549050919050565b60008061137984610be2565b61138457600061138e565b61138d84611598565b5b90508083116113a1576000915050611426565b6000600160149054906101000a900460ff1660ff1682856113c2919061275b565b6113cc9190612981565b90506113d785610be2565b6113ec5781846113e7919061275b565b611421565b600160149054906101000a900460ff1660ff1681838661140c919061275b565b611416919061275b565b6114209190612981565b5b925050505b92915050565b600060066000838152602001908152602001600020549050919050565b8061145381610be2565b15611493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148a906129fe565b60405180910390fd5b600034116114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd90612634565b60405180910390fd5b6114df82610d24565b3411611520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151790612a6a565b60405180910390fd5b61152982610908565b61153282611888565b3373ffffffffffffffffffffffffffffffffffffffff16827f0e54eff26401bf69b81b26f60bd85ef47f5d85275c1d268d84f68d6897431c47346040516115799190611f95565b60405180910390a35050565b600160149054906101000a900460ff1681565b6000806009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115ee846111f8565b73ffffffffffffffffffffffffffffffffffffffff1614159050600081611616576000611620565b61161f8461165c565b5b905061162b84610bc3565b6116515761164c816008600087815260200190815260200160002054611858565b611653565b805b92505050919050565b6000600460006005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006117438461165c565b90506117508484846118a6565b826009600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117ac84826117ee565b6117b584611ae5565b50505050565b600081600001549050919050565b60006117d482611598565b6117dd34611b27565b6117e79190612855565b9050919050565b8060086000848152602001908152602001600020819055506005600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561184582610bc3565b156118545761185382611ae5565b5b5050565b600081831015611868578161186a565b825b905092915050565b6001816000016000828254019250508190555050565b61189181611b94565b61189a81611bdb565b6118a381611c9e565b50565b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193e90612ad6565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054905060008114156119ab5750611ae0565b80600360008282546119bd919061275b565b92505081905550600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600090556005600085815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a9257611a8d8583611ce0565b611a94565b815b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611adc573d6000803e3d6000fd5b5050505b505050565b600160159054906101000a900465ffffffffffff1665ffffffffffff1642611b0d9190612855565b600760008381526020019081526020016000208190555050565b600080600160149054906101000a900460ff166064611b469190612af6565b6064611b529190612b27565b60ff169050600160149054906101000a900460ff1660ff1660648285611b789190612981565b611b82919061278f565b611b8c919061278f565b915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611bd78282836118a6565b5050565b3460036000828254611bed9190612855565b9250508190555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900465ffffffffffff1665ffffffffffff1642611cc69190612855565b600660008381526020019081526020016000208190555050565b600080600160149054906101000a900460ff1660ff1683611d019190612981565b9050611d0c84611d2b565b8184611d18919061275b565b611d229190612855565b91505092915050565b600080611d3783611dc6565b90506000811480611d5b575060006008600085815260200190815260200160002054145b611dbb57611db681600160159054906101000a900465ffffffffffff1665ffffffffffff16600160149054906101000a900460ff1660ff166008600088815260200190815260200160002054611db19190612981565b611e03565b611dbe565b60005b915050919050565b6000611dd182610bc3565b611df957426007600084815260200190815260200160002054611df4919061275b565b611dfc565b60005b9050919050565b6000828285611e12919061278f565b611e1c9190612981565b90509392505050565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600065ffffffffffff82169050919050565b611ec781611eac565b82525050565b6000602082019050611ee26000830184611ebe565b92915050565b600080fd5b6000819050919050565b611f0081611eed565b8114611f0b57600080fd5b50565b600081359050611f1d81611ef7565b92915050565b600060208284031215611f3957611f38611ee8565b5b6000611f4784828501611f0e565b91505092915050565b60008115159050919050565b611f6581611f50565b82525050565b6000602082019050611f806000830184611f5c565b92915050565b611f8f81611eed565b82525050565b6000602082019050611faa6000830184611f86565b92915050565b611fb981611eac565b8114611fc457600080fd5b50565b600081359050611fd681611fb0565b92915050565b600060208284031215611ff257611ff1611ee8565b5b600061200084828501611fc7565b91505092915050565b600080604083850312156120205761201f611ee8565b5b600061202e85828601611f0e565b925050602061203f85828601611f0e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61207e81611eed565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120af82612084565b9050919050565b6120bf816120a4565b82525050565b610100820160008201516120dc6000850182612075565b5060208201516120ef6020850182612075565b5060408201516121026040850182612075565b5060608201516121156060850182612075565b50608082015161212860808501826120b6565b5060a082015161213b60a08501826120b6565b5060c082015161214e60c08501826120b6565b5060e082015161216160e0850182612075565b50505050565b600061217383836120c5565b6101008301905092915050565b6000602082019050919050565b600061219882612049565b6121a28185612054565b93506121ad83612065565b8060005b838110156121de5781516121c58882612167565b97506121d083612180565b9250506001810190506121b1565b5085935050505092915050565b60006020820190508181036000830152612205818461218d565b905092915050565b610100820160008201516122246000850182612075565b5060208201516122376020850182612075565b50604082015161224a6040850182612075565b50606082015161225d6060850182612075565b50608082015161227060808501826120b6565b5060a082015161228360a08501826120b6565b5060c082015161229660c08501826120b6565b5060e08201516122a960e0850182612075565b50505050565b6000610100820190506122c5600083018461220d565b92915050565b6122d4816120a4565b82525050565b60006020820190506122ef60008301846122cb565b92915050565b600060ff82169050919050565b61230b816122f5565b811461231657600080fd5b50565b60008135905061232881612302565b92915050565b60006020828403121561234457612343611ee8565b5b600061235284828501612319565b91505092915050565b612364816120a4565b811461236f57600080fd5b50565b6000813590506123818161235b565b92915050565b60006020828403121561239d5761239c611ee8565b5b60006123ab84828501612372565b91505092915050565b6123bd816122f5565b82525050565b60006020820190506123d860008301846123b4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156124185780820151818401526020810190506123fd565b83811115612427576000848401525b50505050565b6000601f19601f8301169050919050565b6000612449826123de565b61245381856123e9565b93506124638185602086016123fa565b61246c8161242d565b840191505092915050565b60006020820190508181036000830152612491818461243e565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006124c082612499565b6124ca81856124a4565b93506124da8185602086016123fa565b6124e38161242d565b840191505092915050565b6000602082019050818103600083015261250881846124b5565b905092915050565b7f4d757374206265207468652061646d696e000000000000000000000000000000600082015250565b60006125466011836123e9565b915061255182612510565b602082019050919050565b6000602082019050818103600083015261257581612539565b9050919050565b7f4d75737420626520746865206f776e6572000000000000000000000000000000600082015250565b60006125b26011836123e9565b91506125bd8261257c565b602082019050919050565b600060208201905081810360008301526125e1816125a5565b9050919050565b7f4d7573742062652067726561746572207468616e203000000000000000000000600082015250565b600061261e6016836123e9565b9150612629826125e8565b602082019050919050565b6000602082019050818103600083015261264d81612611565b9050919050565b7f5265736572766520746f6f206c6f770000000000000000000000000000000000600082015250565b600061268a600f836123e9565b915061269582612654565b602082019050919050565b600060208201905081810360008301526126b98161267d565b9050919050565b7f4e6f2070726f7065727469657320666f756e6400000000000000000000000000600082015250565b60006126f66013836123e9565b9150612701826126c0565b602082019050919050565b60006020820190508181036000830152612725816126e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061276682611eed565b915061277183611eed565b9250828210156127845761278361272c565b5b828203905092915050565b600061279a82611eed565b91506127a583611eed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127de576127dd61272c565b5b828202905092915050565b7f4f7574206f662072616e67650000000000000000000000000000000000000000600082015250565b600061281f600c836123e9565b915061282a826127e9565b602082019050919050565b6000602082019050818103600083015261284e81612812565b9050919050565b600061286082611eed565b915061286b83611eed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156128a05761289f61272c565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061291482611eed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156129475761294661272c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061298c82611eed565b915061299783611eed565b9250826129a7576129a6612952565b5b828204905092915050565b7f4d757374206e6f7420626520746865206f776e65720000000000000000000000600082015250565b60006129e86015836123e9565b91506129f3826129b2565b602082019050919050565b60006020820190508181036000830152612a17816129db565b9050919050565b7f42696420746f6f206c6f77000000000000000000000000000000000000000000600082015250565b6000612a54600b836123e9565b9150612a5f82612a1e565b602082019050919050565b60006020820190508181036000830152612a8381612a47565b9050919050565b7f4d7573742077697468647261772066726f6d20746f7020626964646572000000600082015250565b6000612ac0601d836123e9565b9150612acb82612a8a565b602082019050919050565b60006020820190508181036000830152612aef81612ab3565b9050919050565b6000612b01826122f5565b9150612b0c836122f5565b925082612b1c57612b1b612952565b5b828204905092915050565b6000612b32826122f5565b9150612b3d836122f5565b925082821015612b5057612b4f61272c565b5b82820390509291505056fea2646970667358221220169fcc4f78a3ddf302092d514a31cbce376c1e98e334ddef22c773f1078fb50064736f6c63430008090033";

type FairgroundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairgroundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fairground__factory extends ContractFactory {
  constructor(...args: FairgroundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Fairground> {
    return super.deploy(overrides || {}) as Promise<Fairground>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Fairground {
    return super.attach(address) as Fairground;
  }
  override connect(signer: Signer): Fairground__factory {
    return super.connect(signer) as Fairground__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairgroundInterface {
    return new utils.Interface(_abi) as FairgroundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fairground {
    return new Contract(address, _abi, signerOrProvider) as Fairground;
  }
}
